////////////////////////////////////////////////////////////////////////////////
// Filename: texture.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////
Texture2D shaderTexture[2];
SamplerState SampleType;


//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 pos : SV_POSITION;
    float2 tex : TEXCOORD0;

	//neighbours
	float2 n0 : TEXCOORD1; //diag
	float2 n1 : TEXCOORD2;
	float2 n2 : TEXCOORD3; //diag
	float2 n3 : TEXCOORD4;
	float2 n4 : TEXCOORD5;
	float2 n5 : TEXCOORD6; 
	float2 n6 : TEXCOORD7; //diag
	float2 n7 : TEXCOORD8;
	float2 n8 : TEXCOORD9; //diag
};


float4 DoF(PixelInputType input, float oWeight) 
{
	float posWeight = 1.0f; 
	float adjWeight = 0.9f;
	float diagWeight = 0.75f;

	float norm = (posWeight + (4.0f * oWeight)  *(adjWeight + diagWeight));

	

	posWeight /= norm;
	adjWeight /= norm;
	diagWeight /= norm;

	float4 c = {0.0f, 0.0f, 0.0f, 0.0f};

	c += shaderTexture[0].Sample(SampleType, input.n0) * diagWeight;
	c += shaderTexture[0].Sample(SampleType, input.n1) * adjWeight;
	c += shaderTexture[0].Sample(SampleType, input.n2) * diagWeight;
	c += shaderTexture[0].Sample(SampleType, input.n3) * adjWeight;
	c += shaderTexture[0].Sample(SampleType, input.n4) * posWeight;
	c += shaderTexture[0].Sample(SampleType, input.n5) * adjWeight;
	c += shaderTexture[0].Sample(SampleType, input.n6) * diagWeight;
	c += shaderTexture[0].Sample(SampleType, input.n7) * adjWeight;
	c += shaderTexture[0].Sample(SampleType, input.n8) * diagWeight;

	c.a = 1.0f;
	return saturate(c);
}

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{
	float2 botLeft = {0.0f, 0.0f};
	float2 topRight = {1.0f, 1.0f};

	float y = 0.5f - input.tex.y;
	float x = (0.5f - input.tex.x) * 1.33f;

	float oWeight = 1.0f - (x * y);

	float4 c = DoF(input, oWeight);

	
	if(0.25f - ((x * x) + (y * y)) >= 0.225f)
	{
		c = shaderTexture[0].Sample(SampleType, input.tex);
	}
	

	return c;
}